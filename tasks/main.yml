---

- name: group {{ jvm_user }}
  group:
    name: "{{ jvm_group }}"
    gid: "{{ jvm_group_id|default(omit) }}"
    state: present

- name: user {{ jvm_user }}
  user:
    name: "{{ jvm_user }}"
    group: "{{ jvm_group }}"
    uid: "{{ jvm_user_id|default(omit) }}"
    state: present

- name: Get JAVA_HOME
  shell: . /etc/profile && echo $JAVA_HOME
  register: JAVA_HOME
  changed_when: false

- name: username/password in jmxremote.password
  lineinfile:
    path: "{{ JAVA_HOME.stdout|default('/usr/lib/jvm/java-8-oracle') }}/jre/lib/management/jmxremote.password"
    line: "{{ user }} {{ password }}"
    owner: "{{ jvm_user }}"
    group: "{{ jvm_group }}"
    mode: 0600
    create: true
    state: present

- name: username/role in jmxremote.access
  lineinfile:
    path: "{{ JAVA_HOME.stdout|default('/usr/lib/jvm/java-8-oracle') }}/jre/lib/management/jmxremote.access"
    line: "{{ user }} readonly"
    owner: "{{ jvm_user }}"
    group: "{{ jvm_group }}"
    create: true
    state: present

- name: Add CA certificates
  apt:
    name: ca-certificates
    update_cache: true
    state: present

- name: Add java datadog agent for applicative traces
  get_url:
    url: "https://search.maven.org/remote_content?g=com.datadoghq&a=dd-java-agent&v={{ datadog_java_agent_version }}"
    dest: /usr/local/bin/dd-java-agent.jar
  when: datadog_java_integration

- name: Register jvm options for DataDog as string
  set_fact:
    java_opts_datadog_jmx: "-Dcom.sun.management.jmxremote.port={{ jmx_port }}
      -Dcom.sun.management.jmxremote.ssl=false
      {%- if datadog_java_integration %} -javaagent:/usr/local/bin/dd-java-agent.jar{% endif %}
      -Ddd.service.name={{ app_instance_name }}"

- name: Register jvm options for DataDog as list
  set_fact:
    java_opts_datadog_jmx_list: "{{ java_opts_datadog_jmx.split(' ') }}"
